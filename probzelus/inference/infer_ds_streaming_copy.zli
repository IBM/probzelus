(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

(** Inference with delayed sampling *)

type 'a expr

val const : 'a -> 'a expr
val plus : float expr * float expr -> float expr
val ( +~ ) : float expr -> float expr -> float expr
val mult : float expr * float expr -> float expr
val ( *~ ) : float expr -> float expr -> float expr
val app : ('a -> 'b) expr * 'a expr -> 'b expr
val ( @@~ ) : ('a -> 'b) expr -> 'a expr -> 'b expr
val pair : 'a expr * 'b expr -> ('a * 'b) expr
val array : 'a expr array -> 'a array expr
val lst : 'a expr list -> 'a list expr
val matrix : 'a expr array array -> 'a array array expr

val eval : 'a expr ~D~> 'a

type 'a ds_distribution

val of_distribution : 'a Distribution.t -> 'a ds_distribution
val gaussian : float expr * float -> float ds_distribution
val beta : float * float -> float ds_distribution
val bernoulli : float expr -> bool ds_distribution

val factor : float ~D~> unit
val sample : 'a ds_distribution ~D~> 'a expr
val observe : 'a ds_distribution * 'a ~D~> unit

val infer :
  int -S-> ('a ~D~> 'b expr) -S-> 'a -D-> 'b Distribution.t

val infer_ess_resample :
  int -S-> float -S-> ('a ~D~> 'b expr) -S-> 'a -D-> 'b Distribution.t

val infer_bounded :
  int -S-> ('a ~D~> 'b expr) -S-> 'a -D-> 'b Distribution.t
