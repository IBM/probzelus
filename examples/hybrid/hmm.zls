open Probzelus
open Infer_pf
open Distribution

let hybrid horizon h = up t where
    rec der t = 1.0 init -.h reset up t -> -.h

let hybrid hmm(prob, obs) = p where
    rec z = horizon h
    and h = present (init) | z -> sample' (prob, exponential 1.0) init 0.
    and v = present z -> sample' (prob, gaussian(last v, 1.0)) init 0.
    and der p = v init 0.
    and present obs(x) -> do () = observe' (prob, (gaussian (p, 0.1), x)) done

let hybrid hmm_time(prob, obs) = p where
    rec init sqrt_lambda = sample' (prob, gaussian (0., 1000.))
    and lambda = sqrt_lambda ** 2.
    and z = horizon h
    and h = present (init) | z -> sample' (prob, exponential lambda) init 0.
    and v = present z -> sample' (prob, gaussian(last v, 1.0)) init 0.
    and der p = v init 0.
    and present obs(x) -> 
      do () = observe' (prob, (gaussian (p, 0.1), x)) done

let hybrid main () = () where
  rec present (init) | (horizon 2.) -> 
    local m in
    do emit obs = last x
    and m = mean_float (last d)
    and () = 
      print_float t; 
      print_string ": mean = "; print_float m;
      print_string " obs = "; print_float (last x);
      print_newline ()
    done
  and der t = 1.0 init 0.
  and x, _ = gen_hybrid hmm obs
  and d = infer_hybrid 10 hmm obs 
  and init d = gaussian(4012., 1.)
  and init x = 0.