open Probzelus
open Infer_pf
open Distribution
open Zelus_io

let hybrid horizon h = up t where
    rec der t = 1.0 init -.h reset up t -> -.h

let hybrid hmm (prob, obs) = p, v where
    rec z = horizon h
    and h = present z -> sample' (prob, exponential 0.1) init 0.1
    and v = present z -> sample' (prob, gaussian (0.0, 5.0)) init 0.0
    and der p = v init 0.
    and present obs(x) -> do () = observe' (prob, (gaussian (p, 0.1), x)) done

let hybrid main () = () where
  rec present (horizon 0.1) ->
    do emit obs = last p_obs
    and () =
      (* Format.printf "obs_p = %f mean_p = %f@."
        <| last cpt <| mean_float (last dp) *)
        Format.printf "%f %f (%f %f) @." <| last p_obs <| mean_float (last dp)
          <| last v_obs <| mean_float (last dv)
    done
  and d = hybrid_infer 1000 hmm (obs)
  and dp, dv = Distribution.split d
  and (p_obs, v_obs), _ = hybrid_gen hmm obs
  and init p_obs = 0.
