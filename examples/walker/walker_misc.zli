(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Infer_pf
val pi : float
type motion_type = Stationary | Walking | Running
type walker = {
  position : float * float;
  velocity : float * float;
  motion_type : motion_type;
}
val pos_noise : float
val coast : float * walker ~D~> walker
val motion_type_transition : motion_type -> (float * motion_type) list
val init_velocity : motion_type ~D~> float * float
val motion : float * walker ~D~> walker * float
val real_motion : (float * walker) -> walker
val position_std_dev : float
val time_std_dev : float
val walker_measure : walker * float *(float * float) ~D~> unit
val walker_gen_measurement : walker -> float * float
val walker_step : float * (float * float) * walker ~D~> walker
val walker_init : unit ~D~> walker
val real_walker_init : unit -> walker
val print : (motion_type * (float * float)) Distribution.t -AD-> unit
