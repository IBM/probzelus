(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Probzelus
open Mttlib
open Util
open Zelus_owl
open Distribution
open Infer_pf

let death_fn _ =
  draw (bernoulli p_dead)

let new_track_init_fn _ =
  (new_track_num (), draw (mv_gaussian(mu_new, sigma_new)))

let state_update_fn (tr_num, tr) =
    (tr_num, draw (mv_gaussian(a_u *@ tr +@ b_u, sigma_update)))

let observe_fn (_, tr) =
    draw (mv_gaussian (proj_pos *@ tr, sigma_obs))

let clutter_init_fn _ =
  draw (mv_gaussian (mu_clutter, sigma_clutter))

let node model () = t, obs_shuffled where
  rec init t = []  (* lst_iter *)
  and t_survived = List.filter death_fn (last t)
  and n_new = draw (poisson lambda_new)
  and t_new = list_init n_new new_track_init_fn
  and t_tot = List.append t_survived t_new
  and t = List.map state_update_fn t_tot
  and obs = List.map observe_fn t
  and n_clutter = draw (poisson lambda_clutter)
  and clutter = list_init n_clutter clutter_init_fn
  and obs_shuffled = Util.shuffle (List.append obs clutter)


let node main () = () where
  rec tr, obs = model ()
  and () = print_string (string_of_tr tr ^ " : " ^ (string_of_vec2_list obs) ^ "\n")
