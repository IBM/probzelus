(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Probzelus
open Util
open Distribution
open Zelus_owl
open Infer_pf

let position (tr_num, tr) =
  (tr_num, proj_pos *@ tr)

let node mota (true_tr, tr_dist) = err where
  rec init tr_match = empty_matching
  and est_tr = Distribution.draw tr_dist
  and est_tr_pos = List.map position est_tr
  and (metrics,tr_match) = matching (last tr_match) true_tr est_tr_pos
  and (d, c, fp, m, mme, g) = metrics
  and init agg_d = 0.
  and agg_d = (last agg_d) +. d
  and init agg_c = 0
  and agg_c = (last agg_c) + c
  and init agg_fp = 0
  and agg_fp = (last agg_fp) + fp
  and init agg_m = 0
  and agg_m = (last agg_m) + m
  and init agg_mme = 0
  and agg_mme = (last agg_mme) + mme
  and init agg_g = 0
  and agg_g = (last agg_g) + g
  and one_minus_mota = ((float_of_int (agg_fp + agg_m + agg_mme))
                          /. (float_of_int agg_g))
  and err = if one_minus_mota >= 1. then infinity
            else (1. /. (1. -. one_minus_mota)) -. 1.
