(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Probzelus
open Zelus_owl

val list_init : int -> (int -> 'a) -> 'a list

val tdiff : float

val new_track_num : unit -> int

val p_dead : float
val lambda_new : float
val mu_new : Mat.mat
val sigma_new : Mat.mat
val a_u : Mat.mat
val b_u : Mat.mat
val sigma_update : Mat.mat
val lambda_clutter : float
val mu_clutter : Mat.mat
val sigma_clutter : Mat.mat
val sigma_obs : Mat.mat
val proj_pos : Mat.mat

val shuffle : 'a list -> 'a list

val ( *@ ) : Mat.mat -> Mat.mat -> Mat.mat
val ( +@ ) : Mat.mat -> Mat.mat -> Mat.mat

val string_of_tr : (int * Mat.mat) list -> string
val string_of_vec2_list : Mat.mat list -> string
val string_of_int_list : int list -> string

type tr_map
val empty_matching : tr_map
val matching : tr_map ->
               (int * Mat.mat) list ->
               (int * Mat.mat) list ->
               ((float * int * int * int * int * int) * tr_map)

val with_retry : ('b -> bool) -S-> ('a -D-> 'b) -S-> 'a -D-> 'b

val is_valid : 'a Distribution.t -> bool
