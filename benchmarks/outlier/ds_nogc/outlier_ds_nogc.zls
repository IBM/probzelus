(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Probzelus
open Distribution
open Infer_ds_naive
open Outlierlib

let proba outlier yobs = pair (is_outlier, xt) where
  rec xt = sample (gaussian ((const 0., 2500.) -> (pre xt, 1.)))
  and init outlier_prob = sample (beta (100., 1000.))
  and is_outlier = sample (bernoulli outlier_prob)
  and () = present (eval is_outlier) -> observe (gaussian (const 0., 10000.), yobs)
           else observe (gaussian (xt, 1.), yobs)

let node main_no_metric particles observed =
  let _, x_d = split (infer_marginal particles outlier observed) in
  x_d

let node main particles (true_x, observed) = (d, mse) where
  rec d = main_no_metric particles observed
  and mse = Metrics.mse (true_x, d)
