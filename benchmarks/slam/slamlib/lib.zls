(*
 * Copyright 2018-2020 IBM Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *)

open Probzelus

let sensor_noise = Array_misc.sensor_noise
let wheel_noise = Array_misc.wheel_noise
let max_pos = Array_misc.max_pos


let node slam_obs (real_map, cmd) = (obs, x) where
  rec init x = 0
  and x = max 0 (min max_pos (if wheel_slip then last x else last x + cmd))
  and wheel_slip = Distribution.draw (Distribution.bernoulli wheel_noise)
  and sensor_error = Distribution.draw (Distribution.bernoulli sensor_noise)
  and b = Array_misc.get real_map x
  and obs = if sensor_error then not b else b


let slam_obs_time = Array_misc.time slam_obs

let node controller (x_dist) = cmd where
  rec xest = Distribution.draw x_dist
  and automaton
  | Go_right ->
      do cmd = 1
      unless (xest = max_pos) then Go_left
  | Go_left ->
      do cmd = -1
      unless (xest = 0) then Go_right
  end
